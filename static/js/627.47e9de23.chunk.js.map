{"version":3,"file":"static/js/627.47e9de23.chunk.js","mappings":"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","sources":["webpack://hooks/./src/components/Title/SolidTitle.module.css?763b","components/Title/SolidTitle.jsx","hooks/useLS.js","views/PexelsImages/SearchFormHooks.js","webpack://hooks/./src/views/PexelsImages/ImagesList.module.css?420f","views/PexelsImages/ImagesListHooks.js","pages/Pixels/Pexels.js","services/pexels.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gradientColor\":\"SolidTitle_gradientColor__R3UeP\",\"title3\":\"SolidTitle_title3__fd+oP SolidTitle_gradientColor__R3UeP\",\"distort\":\"SolidTitle_distort__4CGj9\"};","import s from './SolidTitle.module.css';\r\nimport { gsap } from 'gsap';\r\nimport { useRef, useCallback } from 'react';\r\n\r\nexport function SolidTitle({ titleText }) {\r\n  const title = useRef(); // теперь title - переменная, которая общается с заголовком <h2></h2> \r\n  // и получается, что 2 обработчика handleMouseLeave и handleMouseEnter будут работать конкретно с <h2></h2>\r\n  // Обработчики событий\r\n  // Обработчики требуют ссылку на дом-узел title.current\r\n  // нужно получить доступ к title т.е. к нашему <h2></h2> через useRef()\r\n  const handleMouseLeave = useCallback(() => {\r\n    gsap.to(\r\n      'feDisplacementMap',\r\n      1,\r\n      {\r\n        attr: {\r\n          scale: 0,\r\n        },\r\n        ease: 'circ.out',\r\n      },\r\n      1,\r\n    );\r\n    gsap.to(\r\n      'feTurbulence',\r\n      1,\r\n      {\r\n        attr: {\r\n          baseFrequency: '2.01 .01',\r\n        },\r\n        ease: 'circ.out',\r\n      },\r\n      1,\r\n    );\r\n    gsap.to(\r\n      title.current,\r\n      1,\r\n      {\r\n        fontVariationSettings: \"'wght' 700\",\r\n        ease: 'back.out',\r\n      },\r\n      1,\r\n    );\r\n  }, []);\r\n  const handleMouseEnter = useCallback(() => {\r\n    gsap.to('feDisplacementMap', 1, {\r\n      attr: {\r\n        scale: 100,\r\n      },\r\n      ease: 'circ.out',\r\n    });\r\n    gsap.to(\r\n      'feTurbulence',\r\n      1,\r\n      {\r\n        attr: {\r\n          baseFrequency: '2.08 .08',\r\n        },\r\n        ease: 'circ.out',\r\n      },\r\n      1,\r\n    );\r\n    gsap.to(title.current, 1, {\r\n      fontVariationSettings: \"'wght' 650\",\r\n      ease: 'back.out',\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2\r\n        className={s.title3}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        ref={title}\r\n      >\r\n        {titleText} {/* ожидаю через пропы значение заголовка */}\r\n      </h2>\r\n      <svg className={s.distort}>\r\n        <filter id=\"distortionFilter\">\r\n          <feTurbulence\r\n            type=\"fractalNoise\"\r\n            baseFrequency=\"2.01 .01\"\r\n            numOctaves=\"5\"\r\n            seed=\"2\"\r\n            stitchTiles=\"noStitch\"\r\n            x=\"0%\"\r\n            y=\"0%\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            result=\"noise\"\r\n          ></feTurbulence>\r\n          <feDisplacementMap\r\n            in=\"SourceGraphic\"\r\n            in2=\"noise\"\r\n            scale=\"0\"\r\n            xChannelSelector=\"R\"\r\n            yChannelSelector=\"B\"\r\n            x=\"0%\"\r\n            y=\"0%\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n          ></feDisplacementMap>\r\n        </filter>\r\n      </svg>\r\n    </>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLS = (key, initial_value) => {\r\n  const [state, setState] = useState (\r\n    () => JSON.parse(localStorage.getItem(key)) ?? initial_value,\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState]\r\n}","import {useState} from 'react';\r\n\r\nexport function SearchForm({getSearchValues}) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [perPage, setPerPage] = useState(5);\r\n  \r\n  const handleSearchChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // this.setState({ [name]: value })\r\n    switch(name) {\r\n      case 'searchValue':\r\n        setSearchValue(value);\r\n        break;\r\n      case 'perPage':\r\n        setPerPage(value);\r\n        break;\r\n       default: \r\n    }\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('BEFORE FETCH', searchValue, perPage);\r\n    getSearchValues(searchValue, perPage);\r\n    setSearchValue('');\r\n    setPerPage(2);\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSearchSubmit}>\r\n    <input \r\n      type=\"text\" \r\n      name=\"searchValue\"\r\n      onChange={handleSearchChange} \r\n      value={searchValue}\r\n      placeholder=\"value\"\r\n    />\r\n     <input \r\n      type=\"number\"\r\n      name=\"perPage\"\r\n      onChange={handleSearchChange} \r\n      value={perPage}\r\n      placeholder=\"how many results?\"\r\n    />\r\n    <button type=\"submit\">search</button>\r\n  </form>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"imagesList\":\"ImagesList_imagesList__AeHCC\",\"loadMoreBtn\":\"ImagesList_loadMoreBtn__4u24L\"};","import { useState, useEffect } from \"react\";\r\nimport {useLS} from '../../hooks/useLS';\r\nimport {PixelsFetchObject} from '../../services/pexels'\r\nimport s from './ImagesList.module.css';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport { Loader } from \"../../components/Loader/Loader\";\r\n\r\nconst base_url = 'https://api.pexels.com/v1/';\r\nconst api_key = 'C0c8jsEIkIzHhJ34LClN7vk5fJStc0qpj2n2MRQ5zthwSKBkRibKG5uF';\r\nconst newPexelsFetchObject = new PixelsFetchObject(base_url, api_key);\r\nconsole.log(newPexelsFetchObject);\r\n\r\nexport function ImagesList({searchValue, perPage}) {\r\n  const [searchResults, setSearchResults] = useLS('pexelImages', []);\r\n  const [searchValueLS, setSearchValueLS] = useLS('searchValue', '');\r\n  const [searchPageLS, setSearchPageLS] = useLS('searchPage', '');\r\n  const [status, setStatus] = useState('init');\r\n\r\n  const location = useLocation();\r\n  console.log('LIST location:', location);\r\n\r\n  useEffect(() => {\r\n    if(!searchValue.trim()) return;\r\n    setSearchValueLS(searchValue);\r\n    setSearchPageLS(1);\r\n    setStatus('pending');\r\n    newPexelsFetchObject.resetPage();\r\n    newPexelsFetchObject.searchQuery = searchValue; \r\n    newPexelsFetchObject.perPage = perPage;\r\n\r\n    newPexelsFetchObject.searchPhotos()\r\n      .then(res => {\r\n        console.log(res);\r\n        //this.setState({ searchResults: res, status: 'success' })\r\n        setStatus('success');\r\n        setSearchResults(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setStatus('error');\r\n        // setStatus(() => (err ? 'error' : 'Opps'));\r\n      });\r\n      // return () => alert('UNMOUNT');\r\n  }, [searchValue, perPage, setSearchResults, setSearchPageLS, searchValueLS]);\r\n\r\n\r\n  const handleClick = () => {\r\n    if(!searchValue && searchValueLS) {\r\n      newPexelsFetchObject.searchQuery = searchValueLS;\r\n      setSearchPageLS(searchPageLS + 1);\r\n      newPexelsFetchObject.page = searchPageLS + 1;\r\n      newPexelsFetchObject.searchPhotos()\r\n        .then(res => {\r\n          setSearchResults(prev => [...prev, ...res]);\r\n          setStatus('success')\r\n        })\r\n        .catch(err => setStatus('error'))\r\n    } else {\r\n        newPexelsFetchObject.page = 1;\r\n        console.log(newPexelsFetchObject.page);\r\n        newPexelsFetchObject.searchPhotos()\r\n          .then((res) => {\r\n            console.log(res);\r\n            setSearchResults(prev => [...prev, ...res]);\r\n            setStatus('success');\r\n          })\r\n          .catch(err => {\r\n            //console.log(err);\r\n            setStatus('error');\r\n          }) \r\n    }\r\n  }\r\n\r\n  if(status === 'init' && searchResults.length === 0) {\r\n    return (\r\n      <>\r\n        <h1>Hello! Search something</h1>\r\n        <Loader/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  if(status === 'pending') {\r\n    return (\r\n      <h1>Wait please!</h1>\r\n    )\r\n  }\r\n  if(status === 'success' || (status === 'init' && searchResults.length > 0)) {\r\n    return (\r\n      <>\r\n        <ul className={s.imagesList}>\r\n          {searchResults.length > 0 && \r\n            searchResults.map(el => (\r\n              <li key={el.id}>\r\n                <Link to={{\r\n                  pathname: `/pexels/${el.id}`,\r\n                  state: {\r\n                    from: {location, label: 'back to pexels'}\r\n                  }\r\n                }}>\r\n                  <img src={el.src.small} alt={el.alt}/>\r\n                </Link>\r\n              </li>\r\n          ))}\r\n        </ul>   \r\n        <button type='button' onClick={handleClick} className={s.loadMoreBtn}>Load more</button>\r\n      </>\r\n    )\r\n  }\r\n  if(status === 'error') {\r\n    return (\r\n      <h1>ALARMA!!!</h1>\r\n    )\r\n  }\r\n}","import { useState } from \"react\";\r\n\r\nimport { SearchForm } from \"../../views/PexelsImages/SearchFormHooks\"\r\nimport { ImagesList } from \"../../views/PexelsImages/ImagesListHooks\"\r\nimport { SolidTitle } from \"../../components/Title/SolidTitle\"\r\n\r\nexport default function PexelsPage () {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [perPage, setPerPage] = useState(5);\r\n\r\n  const getSearchValues = (searchValue, perPage) => {\r\n    setSearchValue(searchValue);\r\n    setPerPage(perPage);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h2>Pexels</h2>\r\n      <SearchForm getSearchValues={getSearchValues}/>\r\n      <ImagesList\r\n        searchValue={searchValue}\r\n        perPage={perPage}\r\n        />\r\n    </>\r\n  )\r\n}","import axios from 'axios';\r\n\r\n// OOP\r\nexport class PixelsFetchObject {\r\n  constructor(base_url, api_key) {\r\n    this.base_url = base_url;\r\n    this.api_key = api_key;\r\n    this._searchQuery = '';\r\n    this._page = 1;\r\n    this._perPage = 5;\r\n    this.endpoint = '';\r\n  }\r\n\r\n  get searchQuery() {\r\n    return this._searchQuery;\r\n  }\r\n\r\n  set searchQuery(value) {\r\n    return (this._searchQuery = value);\r\n  }\r\n\r\n  get page() {\r\n    return this._page;\r\n  }\r\n\r\n  set page(value) {\r\n    return (this._page += value); // изменяем значение на 1\r\n  }\r\n\r\n  resetPage() {\r\n    return (this._page = 1), (this._perPage = 5);\r\n  }\r\n\r\n  get perPage() {\r\n    return this._perPage;\r\n  }\r\n\r\n  set perPage(value) {\r\n    return (this._perPage = value);\r\n  }\r\n\r\n  searchPhotos() {\r\n    axios.defaults.baseURL = this.base_url;\r\n    axios.defaults.headers.common.Authorization = this.api_key;\r\n    \r\n    this.endpoint = 'search';\r\n    console.log('searchQuery:', this.searchQuery, 'page:', this.page, 'perPage:', this.perPage);\r\n    let params = `?query=${this.searchQuery}&page=${this.page}&per_page=${this.perPage}`;\r\n    let url = this.endpoint + params;\r\n\r\n    return axios.get(url)\r\n      .then((result) => {\r\n        // console.log(result);\r\n        return result.data;\r\n      })\r\n      .then(data => {\r\n        // console.log(data);\r\n       return data.photos\r\n      })\r\n      .catch((err) => {\r\n        (console.log(err));\r\n      })\r\n  }\r\n\r\n  // запрос за 1 картинкой по id\r\n  \r\n  async getImageInfo(id) {\r\n    axios.defaults.baseURL = this.base_url;\r\n    axios.defaults.headers.common.Authorization = this.api_key;\r\n    this.endpoint = 'photos';\r\n    let params = `/${id}`;\r\n    let url = this.endpoint + params;\r\n    try {\r\n      const result = await axios.get(url);\r\n      const data = result.data;\r\n      if (result.status === 400) throw new Error();\r\n      // console.log(data);\r\n      if (result.status === 200) return data;\r\n    } catch (err) {\r\n      // console.log('err', err);\r\n      return err.message;\r\n    }\r\n  }\r\n\r\n   // Перепишем на async\r\n  //  async searchPhotos() {\r\n  //   axios.defaults.baseURL = this.base_url;\r\n  //   axios.defaults.headers.common.Authorization = this.api_key;\r\n    \r\n  //   this.endpoint = 'search';\r\n  //   let params = `?query=${this.searchQuery}&page=${this.searchPage}&per_page=${this.searchPerPage}`;\r\n  //   let url = this.endpoint + params;\r\n\r\n  //   try {\r\n  //     const result = await axios.get(url);\r\n  //     const data = result.data.phtos;\r\n  //     return data;\r\n  //   } catch {err => {\r\n  //     return err.message;\r\n  //   }}\r\n  // }\r\n}\r\n\r\n// DECLARATIVE\r\n// export function PixelsFetchFunc() {\r\n//   const base_url = 'https://api.pexels.com/v1/';\r\n//   const api_key = 'C0c8jsEIkIzHhJ34LClN7vk5fJStc0qpj2n2MRQ5zthwSKBkRibKG5uF';\r\n//   axios.defaults.baseURL = base_url;\r\n//   axios.defaults.headers.common.Authorization = api_key;\r\n\r\n//   const searchPhotos = (searchQuery, searchPage, searchPerPage) => {\r\n//     axios.defaults.baseURL = this.base_url;\r\n//     axios.defaults.headers.common.Authorization = this.api_key;\r\n    \r\n//     let endpoint = 'search';\r\n//     let params = `?query=${searchQuery}&page=${searchPage}&per_page=${searchPerPage}`\r\n//     let url = endpoint + params;\r\n\r\n//     axios.get(url)\r\n//       .then((result) => {\r\n//         console.log(result);\r\n//       })\r\n//       .catch((err) => {\r\n//         (console.log(err));\r\n//       })\r\n//   }\r\n// }\r\n"],"names":["SolidTitle","_ref","titleText","title","useRef","handleMouseLeave","useCallback","gsap","to","attr","scale","ease","baseFrequency","current","fontVariationSettings","handleMouseEnter","_jsxs","_Fragment","children","className","s","title3","onMouseEnter","onMouseLeave","ref","_jsx","distort","id","type","numOctaves","seed","stitchTiles","x","y","width","height","result","in","in2","xChannelSelector","yChannelSelector","filterUnits","useLS","key","initial_value","state","setState","useState","_JSON$parse","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","SearchForm","getSearchValues","searchValue","setSearchValue","perPage","setPerPage","handleSearchChange","e","name","value","target","onSubmit","preventDefault","console","log","onChange","placeholder","newPexelsFetchObject","PixelsFetchObject","ImagesList","searchResults","setSearchResults","searchValueLS","setSearchValueLS","searchPageLS","setSearchPageLS","status","setStatus","location","useLocation","trim","resetPage","searchQuery","searchPhotos","then","res","catch","err","handleClick","page","prev","length","Loader","imagesList","map","el","Link","pathname","concat","from","label","src","small","alt","onClick","loadMoreBtn","PexelsPage","constructor","base_url","api_key","this","_searchQuery","_page","_perPage","endpoint","axios","defaults","baseURL","headers","common","Authorization","params","url","get","data","photos","getImageInfo","Error","message"],"sourceRoot":""}